name: Python tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install dependencies
        run: python -m pip install --upgrade pip && pip install -r requirements.txt
      - name: Run tests
        run: python -m pytest -q tests

  playwright:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install dev dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r dev-requirements.txt
      - name: Install system dependencies for Playwright (robust)
        run: |
          sudo apt-get update
          PKGS="libnss3 libatk1.0-0 libatk-bridge2.0-0 libcups2 libxss1 libasound2 libgbm1 libgtk-3-0 libx11-xcb1 libxcb1"
          for p in $PKGS; do
            echo "Checking package: $p"
            if apt-cache policy "$p" | grep -q 'Candidate:'; then
              echo "Installing $p"
              sudo apt-get install -y --no-install-recommends "$p"
            else
              # try fallback for libasound2 on newer Ubuntu variants
              if [ "$p" = "libasound2" ]; then
                if apt-cache policy libasound2t64 | grep -q 'Candidate:'; then
                  echo "Installing libasound2t64 as fallback for libasound2"
                  sudo apt-get install -y --no-install-recommends libasound2t64
                  continue
                fi
              fi
              echo "Package $p not available - skipping"
            fi
          done
      - name: Install Playwright browsers (all)
        run: python -m playwright install --with-deps && python -m playwright install chromium firefox webkit
      - name: Start Streamlit app in background
        run: |
          # Start streamlit in background and poll until the app responds on port 8501
          python -m pip install --upgrade pip
          # Use a robust background start and healthcheck loop
          nohup python -m streamlit run app.py &> streamlit.log &
          # wait for localhost:8501 to respond (timeout ~120s)
          for i in {1..120}; do
            if curl -sSf http://localhost:8501/ > /dev/null; then
              echo "Streamlit started"
              break
            fi
            echo "Waiting for Streamlit... ($i)"
            sleep 1
          done
      - name: Wait for app to start
        run: |
          if ! curl -sSf http://localhost:8501/; then
            echo "Streamlit did not start in time" >&2
            cat streamlit.log || true
            exit 1
          fi
      - name: Run Playwright UI test (headless)
        env:
          PLAYWRIGHT_HEADLESS: '1'
        run: python scripts/playwright_test.py
      - name: Upload screenshots
        uses: actions/upload-artifact@v4
        with:
          name: playwright-screenshots
          path: scripts/screenshots/
